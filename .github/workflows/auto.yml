name: Build and Release The Executable

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Specify your Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests pycryptodomex pywin32

      # Step 4: Build the Python script into an .exe using PyInstaller
      - name: Build executable
        run: |
          pyinstaller --onefile --icon icon.ico -w WindowsNt.py


      - name: Generate random tag name
        id: generate_tag
        shell: pwsh
        run: |
          $timestamp = Get-Date -Format "yyyyMMddHHmmss"     # Current date and time
          $randomString = -join ((65..90) + (97..122) | Get-Random -Count 6 | ForEach-Object {[char]$_}) # 6-char random string
          $tagName = "v$timestamp-$randomString"
          Write-Output "Generated tag: $tagName"
          echo "TAG_NAME=$tagName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "Created and pushed tag $env:TAG_NAME"

      # Step 5: Create GitHub Release and Upload the .exe
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload WindowsNt.exe to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/WindowsNt.exe
          asset_name: WindowsNt.exe
          asset_content_type: application/octet-stream

      - name: Upload payload.dd to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: payload.dd
          asset_name: payload.dd
          asset_content_type: application/octet-stream

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: 0xff91a4
